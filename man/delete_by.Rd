% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/delete_by.R
\name{delete_by}
\alias{delete_by}
\title{delete_by}
\usage{
delete_by(conn, tbl_name, by, operator = "AND")
}
\arguments{
\item{conn}{the DBI connection}

\item{tbl_name}{the name of the table}

\item{by}{A named list of the field names and values to determine the rows to be deleted}

\item{operator}{Either "AND" or "OR", determines whether the SQL query deletes
all rows that match all of by or at least one element of by}
}
\value{
the number of rows affected or an error. This value should be 1, 0, or the error
}
\description{
Delete a row from a table by the row id
}
\examples{
con <- DBI::dbConnect(
  RSQLite::SQLite(),
  dbname = ":memory:"
)

DBI::dbWriteTable(
  con,
  name = "test",
  value = data.frame(
    id = 1:2,
    data_col = rep("hi", times = 2)
  )
)

test <- dplyr::collect(dplyr::tbl(con, "test"))

delete_by(con, "test", by = list(id = "1"))

test <- dplyr::collect(dplyr::tbl(con, "test"))

DBI::dbDisconnect(con)



con <- DBI::dbConnect(
  RSQLite::SQLite(),
  dbname = ":memory:"
)

DBI::dbWriteTable(
  con,
  name = "test",
  value = data.frame(
    id = c(1,1,1,2,2),
    uid = c(1,2,1,1,2),
    data_col = rep("hi", times = 5)
  )
)

test <- dplyr::collect(dplyr::tbl(con, "test"))

delete_by(con, "test", by = list(id = "1", uid = "1"))

test <- dplyr::collect(dplyr::tbl(con, "test"))

delete_by(con, "test", by = list(id = "1", uid = "1"), operator = "Or")

test <- dplyr::collect(dplyr::tbl(con, "test"))

DBI::dbDisconnect(con)
}
